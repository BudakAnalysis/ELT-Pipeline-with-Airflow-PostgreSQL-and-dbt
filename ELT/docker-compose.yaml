services:
  source_postgres:
    image: postgres:15
    ports:
      - "5433:5432"
    networks:
      - elt_network
    environment:
      POSTGRES_DB: source_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    volumes:
      - ./source_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d source_db"]
      interval: 5s
      timeout: 5s
      retries: 10
     
  destination_postgres:
    image: postgres:15
    ports:
      - "5434:5432"
    networks:
      - elt_network
    environment:
      POSTGRES_DB: destination_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d destination_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  postgres:
    image: postgres:13
    networks:
      - elt_network
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
 
  init-airflow:
    image: apache/airflow:2.7.1
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - elt_network
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=GmctaPdgZIw9Hp5y1GxdB2uHjVL1jq6VsLezJSEbPL8=
      - AIRFLOW__WEBSERVER__SECRET_KEY=a25dca2f089b55affe7ec98043c7f7b6b947d0136aa05ca0a8d5c3ca28b59111
    command: >
      bash -c "airflow db migrate &&
              airflow users create --username airflow --password password --firstname John --lastname Doe --role Admin --email admin@example.com"

  webserver:
    image: apache/airflow:2.7.1
    depends_on:
      init-airflow:
        condition: service_completed_successfully
      destination_postgres:
        condition: service_healthy
    networks:
      - elt_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./elt:/opt/airflow/elt
      - ./custom_postgres:/opt/dbt
      - ~/.dbt:/home/airflow/.dbt
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=GmctaPdgZIw9Hp5y1GxdB2uHjVL1jq6VsLezJSEbPL8=
      - AIRFLOW__WEBSERVER__DEFAULT_USER_USERNAME=airflow
      - AIRFLOW__WEBSERVER__DEFAULT_USER_PASSWORD=password
      - AIRFLOW_WWW_USER_USERNAME=airflow
      - AIRFLOW_WWW_USER_PASSWORD=password
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
      - AIRFLOW__WEBSERVER__SECRET_KEY=a25dca2f089b55affe7ec98043c7f7b6b947d0136aa05ca0a8d5c3ca28b59111
      - _PIP_ADDITIONAL_REQUIREMENTS=apache-airflow-providers-docker
      - HOST_PROJECT_PATH=${PWD}  
    ports:
      - "8080:8080"
    command: airflow webserver

  scheduler:
    image: apache/airflow:2.7.1
    depends_on:
      init-airflow:
        condition: service_completed_successfully
      destination_postgres:
        condition: service_healthy
    networks:
      - elt_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./elt:/opt/airflow/elt
      - ./custom_postgres:/opt/dbt
      - ~/.dbt:/home/airflow/.dbt
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=GmctaPdgZIw9Hp5y1GxdB2uHjVL1jq6VsLezJSEbPL8=
      - AIRFLOW__WEBSERVER__DEFAULT_USER_USERNAME=airflow
      - AIRFLOW__WEBSERVER__DEFAULT_USER_PASSWORD=password
      - AIRFLOW_WWW_USER_USERNAME=airflow
      - AIRFLOW_WWW_USER_PASSWORD=password
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
      - AIRFLOW__WEBSERVER__SECRET_KEY=a25dca2f089b55affe7ec98043c7f7b6b947d0136aa05ca0a8d5c3ca28b59111
      - _PIP_ADDITIONAL_REQUIREMENTS=apache-airflow-providers-docker
      - HOST_PROJECT_PATH=${PWD}  
    command: airflow scheduler

networks:
  elt_network:
    driver: bridge